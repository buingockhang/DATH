#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BookStore.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Qldasinhvien")]
	public partial class dbSinhVienDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertADMIN(ADMIN instance);
    partial void UpdateADMIN(ADMIN instance);
    partial void DeleteADMIN(ADMIN instance);
    partial void InsertBangTieuChi(BangTieuChi instance);
    partial void UpdateBangTieuChi(BangTieuChi instance);
    partial void DeleteBangTieuChi(BangTieuChi instance);
    partial void InsertKetQua(KetQua instance);
    partial void UpdateKetQua(KetQua instance);
    partial void DeleteKetQua(KetQua instance);
    partial void InsertKetQuaPT(KetQuaPT instance);
    partial void UpdateKetQuaPT(KetQuaPT instance);
    partial void DeleteKetQuaPT(KetQuaPT instance);
    partial void InsertKhoa(Khoa instance);
    partial void UpdateKhoa(Khoa instance);
    partial void DeleteKhoa(Khoa instance);
    partial void InsertLop(Lop instance);
    partial void UpdateLop(Lop instance);
    partial void DeleteLop(Lop instance);
    partial void InsertMaLoaiTV(MaLoaiTV instance);
    partial void UpdateMaLoaiTV(MaLoaiTV instance);
    partial void DeleteMaLoaiTV(MaLoaiTV instance);
    partial void InsertMaLoaiTV_Quyen(MaLoaiTV_Quyen instance);
    partial void UpdateMaLoaiTV_Quyen(MaLoaiTV_Quyen instance);
    partial void DeleteMaLoaiTV_Quyen(MaLoaiTV_Quyen instance);
    partial void InsertMon(Mon instance);
    partial void UpdateMon(Mon instance);
    partial void DeleteMon(Mon instance);
    partial void InsertPhongTrao(PhongTrao instance);
    partial void UpdatePhongTrao(PhongTrao instance);
    partial void DeletePhongTrao(PhongTrao instance);
    partial void InsertQuyen(Quyen instance);
    partial void UpdateQuyen(Quyen instance);
    partial void DeleteQuyen(Quyen instance);
    partial void InsertSinhVien(SinhVien instance);
    partial void UpdateSinhVien(SinhVien instance);
    partial void DeleteSinhVien(SinhVien instance);
    partial void InsertThanhVien(ThanhVien instance);
    partial void UpdateThanhVien(ThanhVien instance);
    partial void DeleteThanhVien(ThanhVien instance);
    #endregion
		
		public dbSinhVienDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QldasinhvienConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbSinhVienDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbSinhVienDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbSinhVienDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbSinhVienDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ADMIN> ADMINs
		{
			get
			{
				return this.GetTable<ADMIN>();
			}
		}
		
		public System.Data.Linq.Table<BangTieuChi> BangTieuChis
		{
			get
			{
				return this.GetTable<BangTieuChi>();
			}
		}
		
		public System.Data.Linq.Table<KetQua> KetQuas
		{
			get
			{
				return this.GetTable<KetQua>();
			}
		}
		
		public System.Data.Linq.Table<KetQuaPT> KetQuaPTs
		{
			get
			{
				return this.GetTable<KetQuaPT>();
			}
		}
		
		public System.Data.Linq.Table<Khoa> Khoas
		{
			get
			{
				return this.GetTable<Khoa>();
			}
		}
		
		public System.Data.Linq.Table<Lop> Lops
		{
			get
			{
				return this.GetTable<Lop>();
			}
		}
		
		public System.Data.Linq.Table<MaLoaiTV> MaLoaiTVs
		{
			get
			{
				return this.GetTable<MaLoaiTV>();
			}
		}
		
		public System.Data.Linq.Table<MaLoaiTV_Quyen> MaLoaiTV_Quyens
		{
			get
			{
				return this.GetTable<MaLoaiTV_Quyen>();
			}
		}
		
		public System.Data.Linq.Table<Mon> Mons
		{
			get
			{
				return this.GetTable<Mon>();
			}
		}
		
		public System.Data.Linq.Table<PhongTrao> PhongTraos
		{
			get
			{
				return this.GetTable<PhongTrao>();
			}
		}
		
		public System.Data.Linq.Table<Quyen> Quyens
		{
			get
			{
				return this.GetTable<Quyen>();
			}
		}
		
		public System.Data.Linq.Table<SinhVien> SinhViens
		{
			get
			{
				return this.GetTable<SinhVien>();
			}
		}
		
		public System.Data.Linq.Table<ThanhVien> ThanhViens
		{
			get
			{
				return this.GetTable<ThanhVien>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADMIN")]
	public partial class ADMIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserAdmin;
		
		private string _PassAdmin;
		
		private string _HoTen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserAdminChanging(string value);
    partial void OnUserAdminChanged();
    partial void OnPassAdminChanging(string value);
    partial void OnPassAdminChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    #endregion
		
		public ADMIN()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAdmin", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserAdmin
		{
			get
			{
				return this._UserAdmin;
			}
			set
			{
				if ((this._UserAdmin != value))
				{
					this.OnUserAdminChanging(value);
					this.SendPropertyChanging();
					this._UserAdmin = value;
					this.SendPropertyChanged("UserAdmin");
					this.OnUserAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassAdmin", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string PassAdmin
		{
			get
			{
				return this._PassAdmin;
			}
			set
			{
				if ((this._PassAdmin != value))
				{
					this.OnPassAdminChanging(value);
					this.SendPropertyChanging();
					this._PassAdmin = value;
					this.SendPropertyChanged("PassAdmin");
					this.OnPassAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BangTieuChi")]
	public partial class BangTieuChi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLop;
		
		private string _MaKhoa;
		
		private string _MaSV;
		
		private string _MaMon;
		
		private System.Nullable<decimal> _Diem;
		
		private string _Thamgiahoatdong;
		
		private EntityRef<Mon> _Mon;
		
		private EntityRef<SinhVien> _SinhVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLopChanging(string value);
    partial void OnMaLopChanged();
    partial void OnMaKhoaChanging(string value);
    partial void OnMaKhoaChanged();
    partial void OnMaSVChanging(string value);
    partial void OnMaSVChanged();
    partial void OnMaMonChanging(string value);
    partial void OnMaMonChanged();
    partial void OnDiemChanging(System.Nullable<decimal> value);
    partial void OnDiemChanged();
    partial void OnThamgiahoatdongChanging(string value);
    partial void OnThamgiahoatdongChanged();
    #endregion
		
		public BangTieuChi()
		{
			this._Mon = default(EntityRef<Mon>);
			this._SinhVien = default(EntityRef<SinhVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoa", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MaKhoa
		{
			get
			{
				return this._MaKhoa;
			}
			set
			{
				if ((this._MaKhoa != value))
				{
					this.OnMaKhoaChanging(value);
					this.SendPropertyChanging();
					this._MaKhoa = value;
					this.SendPropertyChanged("MaKhoa");
					this.OnMaKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSV", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSV
		{
			get
			{
				return this._MaSV;
			}
			set
			{
				if ((this._MaSV != value))
				{
					if (this._SinhVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSVChanging(value);
					this.SendPropertyChanging();
					this._MaSV = value;
					this.SendPropertyChanged("MaSV");
					this.OnMaSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMon", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMon
		{
			get
			{
				return this._MaMon;
			}
			set
			{
				if ((this._MaMon != value))
				{
					if (this._Mon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMonChanging(value);
					this.SendPropertyChanging();
					this._MaMon = value;
					this.SendPropertyChanged("MaMon");
					this.OnMaMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diem", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Diem
		{
			get
			{
				return this._Diem;
			}
			set
			{
				if ((this._Diem != value))
				{
					this.OnDiemChanging(value);
					this.SendPropertyChanging();
					this._Diem = value;
					this.SendPropertyChanged("Diem");
					this.OnDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thamgiahoatdong", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Thamgiahoatdong
		{
			get
			{
				return this._Thamgiahoatdong;
			}
			set
			{
				if ((this._Thamgiahoatdong != value))
				{
					this.OnThamgiahoatdongChanging(value);
					this.SendPropertyChanging();
					this._Thamgiahoatdong = value;
					this.SendPropertyChanged("Thamgiahoatdong");
					this.OnThamgiahoatdongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mon_BangTieuChi", Storage="_Mon", ThisKey="MaMon", OtherKey="MaMon", IsForeignKey=true)]
		public Mon Mon
		{
			get
			{
				return this._Mon.Entity;
			}
			set
			{
				Mon previousValue = this._Mon.Entity;
				if (((previousValue != value) 
							|| (this._Mon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mon.Entity = null;
						previousValue.BangTieuChis.Remove(this);
					}
					this._Mon.Entity = value;
					if ((value != null))
					{
						value.BangTieuChis.Add(this);
						this._MaMon = value.MaMon;
					}
					else
					{
						this._MaMon = default(string);
					}
					this.SendPropertyChanged("Mon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_BangTieuChi", Storage="_SinhVien", ThisKey="MaSV", OtherKey="Masv", IsForeignKey=true)]
		public SinhVien SinhVien
		{
			get
			{
				return this._SinhVien.Entity;
			}
			set
			{
				SinhVien previousValue = this._SinhVien.Entity;
				if (((previousValue != value) 
							|| (this._SinhVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SinhVien.Entity = null;
						previousValue.BangTieuChis.Remove(this);
					}
					this._SinhVien.Entity = value;
					if ((value != null))
					{
						value.BangTieuChis.Add(this);
						this._MaSV = value.Masv;
					}
					else
					{
						this._MaSV = default(string);
					}
					this.SendPropertyChanged("SinhVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KetQua")]
	public partial class KetQua : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Masv;
		
		private string _MaMon;
		
		private byte _LanThi;
		
		private System.Nullable<decimal> _Diem;
		
		private EntityRef<Mon> _Mon;
		
		private EntityRef<SinhVien> _SinhVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMasvChanging(string value);
    partial void OnMasvChanged();
    partial void OnMaMonChanging(string value);
    partial void OnMaMonChanged();
    partial void OnLanThiChanging(byte value);
    partial void OnLanThiChanged();
    partial void OnDiemChanging(System.Nullable<decimal> value);
    partial void OnDiemChanged();
    #endregion
		
		public KetQua()
		{
			this._Mon = default(EntityRef<Mon>);
			this._SinhVien = default(EntityRef<SinhVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Masv", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Masv
		{
			get
			{
				return this._Masv;
			}
			set
			{
				if ((this._Masv != value))
				{
					if (this._SinhVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMasvChanging(value);
					this.SendPropertyChanging();
					this._Masv = value;
					this.SendPropertyChanged("Masv");
					this.OnMasvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMon", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMon
		{
			get
			{
				return this._MaMon;
			}
			set
			{
				if ((this._MaMon != value))
				{
					if (this._Mon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMonChanging(value);
					this.SendPropertyChanging();
					this._MaMon = value;
					this.SendPropertyChanged("MaMon");
					this.OnMaMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanThi", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte LanThi
		{
			get
			{
				return this._LanThi;
			}
			set
			{
				if ((this._LanThi != value))
				{
					this.OnLanThiChanging(value);
					this.SendPropertyChanging();
					this._LanThi = value;
					this.SendPropertyChanged("LanThi");
					this.OnLanThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diem", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> Diem
		{
			get
			{
				return this._Diem;
			}
			set
			{
				if ((this._Diem != value))
				{
					this.OnDiemChanging(value);
					this.SendPropertyChanging();
					this._Diem = value;
					this.SendPropertyChanged("Diem");
					this.OnDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mon_KetQua", Storage="_Mon", ThisKey="MaMon", OtherKey="MaMon", IsForeignKey=true)]
		public Mon Mon
		{
			get
			{
				return this._Mon.Entity;
			}
			set
			{
				Mon previousValue = this._Mon.Entity;
				if (((previousValue != value) 
							|| (this._Mon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mon.Entity = null;
						previousValue.KetQuas.Remove(this);
					}
					this._Mon.Entity = value;
					if ((value != null))
					{
						value.KetQuas.Add(this);
						this._MaMon = value.MaMon;
					}
					else
					{
						this._MaMon = default(string);
					}
					this.SendPropertyChanged("Mon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_KetQua", Storage="_SinhVien", ThisKey="Masv", OtherKey="Masv", IsForeignKey=true)]
		public SinhVien SinhVien
		{
			get
			{
				return this._SinhVien.Entity;
			}
			set
			{
				SinhVien previousValue = this._SinhVien.Entity;
				if (((previousValue != value) 
							|| (this._SinhVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SinhVien.Entity = null;
						previousValue.KetQuas.Remove(this);
					}
					this._SinhVien.Entity = value;
					if ((value != null))
					{
						value.KetQuas.Add(this);
						this._Masv = value.Masv;
					}
					else
					{
						this._Masv = default(string);
					}
					this.SendPropertyChanged("SinhVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KetQuaPT")]
	public partial class KetQuaPT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Masv;
		
		private int _Ma_PT;
		
		private System.Nullable<int> _TongDiem;
		
		private EntityRef<PhongTrao> _PhongTrao;
		
		private EntityRef<SinhVien> _SinhVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMasvChanging(string value);
    partial void OnMasvChanged();
    partial void OnMa_PTChanging(int value);
    partial void OnMa_PTChanged();
    partial void OnTongDiemChanging(System.Nullable<int> value);
    partial void OnTongDiemChanged();
    #endregion
		
		public KetQuaPT()
		{
			this._PhongTrao = default(EntityRef<PhongTrao>);
			this._SinhVien = default(EntityRef<SinhVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Masv", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Masv
		{
			get
			{
				return this._Masv;
			}
			set
			{
				if ((this._Masv != value))
				{
					if (this._SinhVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMasvChanging(value);
					this.SendPropertyChanging();
					this._Masv = value;
					this.SendPropertyChanged("Masv");
					this.OnMasvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ma_PT", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Ma_PT
		{
			get
			{
				return this._Ma_PT;
			}
			set
			{
				if ((this._Ma_PT != value))
				{
					if (this._PhongTrao.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMa_PTChanging(value);
					this.SendPropertyChanging();
					this._Ma_PT = value;
					this.SendPropertyChanged("Ma_PT");
					this.OnMa_PTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongDiem", DbType="Int")]
		public System.Nullable<int> TongDiem
		{
			get
			{
				return this._TongDiem;
			}
			set
			{
				if ((this._TongDiem != value))
				{
					this.OnTongDiemChanging(value);
					this.SendPropertyChanging();
					this._TongDiem = value;
					this.SendPropertyChanged("TongDiem");
					this.OnTongDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongTrao_KetQuaPT", Storage="_PhongTrao", ThisKey="Ma_PT", OtherKey="Ma_PT", IsForeignKey=true)]
		public PhongTrao PhongTrao
		{
			get
			{
				return this._PhongTrao.Entity;
			}
			set
			{
				PhongTrao previousValue = this._PhongTrao.Entity;
				if (((previousValue != value) 
							|| (this._PhongTrao.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhongTrao.Entity = null;
						previousValue.KetQuaPTs.Remove(this);
					}
					this._PhongTrao.Entity = value;
					if ((value != null))
					{
						value.KetQuaPTs.Add(this);
						this._Ma_PT = value.Ma_PT;
					}
					else
					{
						this._Ma_PT = default(int);
					}
					this.SendPropertyChanged("PhongTrao");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_KetQuaPT", Storage="_SinhVien", ThisKey="Masv", OtherKey="Masv", IsForeignKey=true)]
		public SinhVien SinhVien
		{
			get
			{
				return this._SinhVien.Entity;
			}
			set
			{
				SinhVien previousValue = this._SinhVien.Entity;
				if (((previousValue != value) 
							|| (this._SinhVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SinhVien.Entity = null;
						previousValue.KetQuaPTs.Remove(this);
					}
					this._SinhVien.Entity = value;
					if ((value != null))
					{
						value.KetQuaPTs.Add(this);
						this._Masv = value.Masv;
					}
					else
					{
						this._Masv = default(string);
					}
					this.SendPropertyChanged("SinhVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Khoa")]
	public partial class Khoa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKhoa;
		
		private string _TenKhoa;
		
		private EntitySet<Lop> _Lops;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhoaChanging(string value);
    partial void OnMaKhoaChanged();
    partial void OnTenKhoaChanging(string value);
    partial void OnTenKhoaChanged();
    #endregion
		
		public Khoa()
		{
			this._Lops = new EntitySet<Lop>(new Action<Lop>(this.attach_Lops), new Action<Lop>(this.detach_Lops));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoa", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKhoa
		{
			get
			{
				return this._MaKhoa;
			}
			set
			{
				if ((this._MaKhoa != value))
				{
					this.OnMaKhoaChanging(value);
					this.SendPropertyChanging();
					this._MaKhoa = value;
					this.SendPropertyChanged("MaKhoa");
					this.OnMaKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhoa", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenKhoa
		{
			get
			{
				return this._TenKhoa;
			}
			set
			{
				if ((this._TenKhoa != value))
				{
					this.OnTenKhoaChanging(value);
					this.SendPropertyChanging();
					this._TenKhoa = value;
					this.SendPropertyChanged("TenKhoa");
					this.OnTenKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoa_Lop", Storage="_Lops", ThisKey="MaKhoa", OtherKey="MaKhoa")]
		public EntitySet<Lop> Lops
		{
			get
			{
				return this._Lops;
			}
			set
			{
				this._Lops.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Lops(Lop entity)
		{
			this.SendPropertyChanging();
			entity.Khoa = this;
		}
		
		private void detach_Lops(Lop entity)
		{
			this.SendPropertyChanging();
			entity.Khoa = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lop")]
	public partial class Lop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLop;
		
		private string _TenLop;
		
		private string _MaKhoa;
		
		private EntitySet<SinhVien> _SinhViens;
		
		private EntityRef<Khoa> _Khoa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLopChanging(string value);
    partial void OnMaLopChanged();
    partial void OnTenLopChanging(string value);
    partial void OnTenLopChanged();
    partial void OnMaKhoaChanging(string value);
    partial void OnMaKhoaChanged();
    #endregion
		
		public Lop()
		{
			this._SinhViens = new EntitySet<SinhVien>(new Action<SinhVien>(this.attach_SinhViens), new Action<SinhVien>(this.detach_SinhViens));
			this._Khoa = default(EntityRef<Khoa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLop", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenLop
		{
			get
			{
				return this._TenLop;
			}
			set
			{
				if ((this._TenLop != value))
				{
					this.OnTenLopChanging(value);
					this.SendPropertyChanging();
					this._TenLop = value;
					this.SendPropertyChanged("TenLop");
					this.OnTenLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoa", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MaKhoa
		{
			get
			{
				return this._MaKhoa;
			}
			set
			{
				if ((this._MaKhoa != value))
				{
					if (this._Khoa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhoaChanging(value);
					this.SendPropertyChanging();
					this._MaKhoa = value;
					this.SendPropertyChanged("MaKhoa");
					this.OnMaKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lop_SinhVien", Storage="_SinhViens", ThisKey="MaLop", OtherKey="MaLop")]
		public EntitySet<SinhVien> SinhViens
		{
			get
			{
				return this._SinhViens;
			}
			set
			{
				this._SinhViens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoa_Lop", Storage="_Khoa", ThisKey="MaKhoa", OtherKey="MaKhoa", IsForeignKey=true)]
		public Khoa Khoa
		{
			get
			{
				return this._Khoa.Entity;
			}
			set
			{
				Khoa previousValue = this._Khoa.Entity;
				if (((previousValue != value) 
							|| (this._Khoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Khoa.Entity = null;
						previousValue.Lops.Remove(this);
					}
					this._Khoa.Entity = value;
					if ((value != null))
					{
						value.Lops.Add(this);
						this._MaKhoa = value.MaKhoa;
					}
					else
					{
						this._MaKhoa = default(string);
					}
					this.SendPropertyChanged("Khoa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SinhViens(SinhVien entity)
		{
			this.SendPropertyChanging();
			entity.Lop = this;
		}
		
		private void detach_SinhViens(SinhVien entity)
		{
			this.SendPropertyChanging();
			entity.Lop = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MaLoaiTV")]
	public partial class MaLoaiTV : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_MaLoai;
		
		private string _TenLoaiTV;
		
		private EntitySet<MaLoaiTV_Quyen> _MaLoaiTV_Quyens;
		
		private EntitySet<ThanhVien> _ThanhViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_MaLoaiChanging(int value);
    partial void OnID_MaLoaiChanged();
    partial void OnTenLoaiTVChanging(string value);
    partial void OnTenLoaiTVChanged();
    #endregion
		
		public MaLoaiTV()
		{
			this._MaLoaiTV_Quyens = new EntitySet<MaLoaiTV_Quyen>(new Action<MaLoaiTV_Quyen>(this.attach_MaLoaiTV_Quyens), new Action<MaLoaiTV_Quyen>(this.detach_MaLoaiTV_Quyens));
			this._ThanhViens = new EntitySet<ThanhVien>(new Action<ThanhVien>(this.attach_ThanhViens), new Action<ThanhVien>(this.detach_ThanhViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_MaLoai", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_MaLoai
		{
			get
			{
				return this._ID_MaLoai;
			}
			set
			{
				if ((this._ID_MaLoai != value))
				{
					this.OnID_MaLoaiChanging(value);
					this.SendPropertyChanging();
					this._ID_MaLoai = value;
					this.SendPropertyChanged("ID_MaLoai");
					this.OnID_MaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiTV", DbType="NVarChar(50)")]
		public string TenLoaiTV
		{
			get
			{
				return this._TenLoaiTV;
			}
			set
			{
				if ((this._TenLoaiTV != value))
				{
					this.OnTenLoaiTVChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiTV = value;
					this.SendPropertyChanged("TenLoaiTV");
					this.OnTenLoaiTVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MaLoaiTV_MaLoaiTV_Quyen", Storage="_MaLoaiTV_Quyens", ThisKey="ID_MaLoai", OtherKey="ID_MaLoai")]
		public EntitySet<MaLoaiTV_Quyen> MaLoaiTV_Quyens
		{
			get
			{
				return this._MaLoaiTV_Quyens;
			}
			set
			{
				this._MaLoaiTV_Quyens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MaLoaiTV_ThanhVien", Storage="_ThanhViens", ThisKey="ID_MaLoai", OtherKey="ID_MaLoai")]
		public EntitySet<ThanhVien> ThanhViens
		{
			get
			{
				return this._ThanhViens;
			}
			set
			{
				this._ThanhViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MaLoaiTV_Quyens(MaLoaiTV_Quyen entity)
		{
			this.SendPropertyChanging();
			entity.MaLoaiTV = this;
		}
		
		private void detach_MaLoaiTV_Quyens(MaLoaiTV_Quyen entity)
		{
			this.SendPropertyChanging();
			entity.MaLoaiTV = null;
		}
		
		private void attach_ThanhViens(ThanhVien entity)
		{
			this.SendPropertyChanging();
			entity.MaLoaiTV = this;
		}
		
		private void detach_ThanhViens(ThanhVien entity)
		{
			this.SendPropertyChanging();
			entity.MaLoaiTV = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MaLoaiTV_Quyen")]
	public partial class MaLoaiTV_Quyen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_MaLoai;
		
		private string _MaQuyen;
		
		private string _GhiChu;
		
		private EntityRef<MaLoaiTV> _MaLoaiTV;
		
		private EntityRef<Quyen> _Quyen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_MaLoaiChanging(int value);
    partial void OnID_MaLoaiChanged();
    partial void OnMaQuyenChanging(string value);
    partial void OnMaQuyenChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public MaLoaiTV_Quyen()
		{
			this._MaLoaiTV = default(EntityRef<MaLoaiTV>);
			this._Quyen = default(EntityRef<Quyen>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_MaLoai", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_MaLoai
		{
			get
			{
				return this._ID_MaLoai;
			}
			set
			{
				if ((this._ID_MaLoai != value))
				{
					if (this._MaLoaiTV.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_MaLoaiChanging(value);
					this.SendPropertyChanging();
					this._ID_MaLoai = value;
					this.SendPropertyChanged("ID_MaLoai");
					this.OnID_MaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaQuyen", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaQuyen
		{
			get
			{
				return this._MaQuyen;
			}
			set
			{
				if ((this._MaQuyen != value))
				{
					if (this._Quyen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaQuyenChanging(value);
					this.SendPropertyChanging();
					this._MaQuyen = value;
					this.SendPropertyChanged("MaQuyen");
					this.OnMaQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(50)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MaLoaiTV_MaLoaiTV_Quyen", Storage="_MaLoaiTV", ThisKey="ID_MaLoai", OtherKey="ID_MaLoai", IsForeignKey=true)]
		public MaLoaiTV MaLoaiTV
		{
			get
			{
				return this._MaLoaiTV.Entity;
			}
			set
			{
				MaLoaiTV previousValue = this._MaLoaiTV.Entity;
				if (((previousValue != value) 
							|| (this._MaLoaiTV.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MaLoaiTV.Entity = null;
						previousValue.MaLoaiTV_Quyens.Remove(this);
					}
					this._MaLoaiTV.Entity = value;
					if ((value != null))
					{
						value.MaLoaiTV_Quyens.Add(this);
						this._ID_MaLoai = value.ID_MaLoai;
					}
					else
					{
						this._ID_MaLoai = default(int);
					}
					this.SendPropertyChanged("MaLoaiTV");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quyen_MaLoaiTV_Quyen", Storage="_Quyen", ThisKey="MaQuyen", OtherKey="MaQuyen", IsForeignKey=true)]
		public Quyen Quyen
		{
			get
			{
				return this._Quyen.Entity;
			}
			set
			{
				Quyen previousValue = this._Quyen.Entity;
				if (((previousValue != value) 
							|| (this._Quyen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Quyen.Entity = null;
						previousValue.MaLoaiTV_Quyens.Remove(this);
					}
					this._Quyen.Entity = value;
					if ((value != null))
					{
						value.MaLoaiTV_Quyens.Add(this);
						this._MaQuyen = value.MaQuyen;
					}
					else
					{
						this._MaQuyen = default(string);
					}
					this.SendPropertyChanged("Quyen");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mon")]
	public partial class Mon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaMon;
		
		private string _TenMon;
		
		private EntitySet<BangTieuChi> _BangTieuChis;
		
		private EntitySet<KetQua> _KetQuas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMonChanging(string value);
    partial void OnMaMonChanged();
    partial void OnTenMonChanging(string value);
    partial void OnTenMonChanged();
    #endregion
		
		public Mon()
		{
			this._BangTieuChis = new EntitySet<BangTieuChi>(new Action<BangTieuChi>(this.attach_BangTieuChis), new Action<BangTieuChi>(this.detach_BangTieuChis));
			this._KetQuas = new EntitySet<KetQua>(new Action<KetQua>(this.attach_KetQuas), new Action<KetQua>(this.detach_KetQuas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMon", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMon
		{
			get
			{
				return this._MaMon;
			}
			set
			{
				if ((this._MaMon != value))
				{
					this.OnMaMonChanging(value);
					this.SendPropertyChanging();
					this._MaMon = value;
					this.SendPropertyChanged("MaMon");
					this.OnMaMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMon", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenMon
		{
			get
			{
				return this._TenMon;
			}
			set
			{
				if ((this._TenMon != value))
				{
					this.OnTenMonChanging(value);
					this.SendPropertyChanging();
					this._TenMon = value;
					this.SendPropertyChanged("TenMon");
					this.OnTenMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mon_BangTieuChi", Storage="_BangTieuChis", ThisKey="MaMon", OtherKey="MaMon")]
		public EntitySet<BangTieuChi> BangTieuChis
		{
			get
			{
				return this._BangTieuChis;
			}
			set
			{
				this._BangTieuChis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mon_KetQua", Storage="_KetQuas", ThisKey="MaMon", OtherKey="MaMon")]
		public EntitySet<KetQua> KetQuas
		{
			get
			{
				return this._KetQuas;
			}
			set
			{
				this._KetQuas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BangTieuChis(BangTieuChi entity)
		{
			this.SendPropertyChanging();
			entity.Mon = this;
		}
		
		private void detach_BangTieuChis(BangTieuChi entity)
		{
			this.SendPropertyChanging();
			entity.Mon = null;
		}
		
		private void attach_KetQuas(KetQua entity)
		{
			this.SendPropertyChanging();
			entity.Mon = this;
		}
		
		private void detach_KetQuas(KetQua entity)
		{
			this.SendPropertyChanging();
			entity.Mon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhongTrao")]
	public partial class PhongTrao : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ma_PT;
		
		private string _Ten_PT;
		
		private string _IM_PT;
		
		private System.Nullable<int> _Diem_PT;
		
		private System.Nullable<bool> _TrangThai_PT;
		
		private EntitySet<KetQuaPT> _KetQuaPTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMa_PTChanging(int value);
    partial void OnMa_PTChanged();
    partial void OnTen_PTChanging(string value);
    partial void OnTen_PTChanged();
    partial void OnIM_PTChanging(string value);
    partial void OnIM_PTChanged();
    partial void OnDiem_PTChanging(System.Nullable<int> value);
    partial void OnDiem_PTChanged();
    partial void OnTrangThai_PTChanging(System.Nullable<bool> value);
    partial void OnTrangThai_PTChanged();
    #endregion
		
		public PhongTrao()
		{
			this._KetQuaPTs = new EntitySet<KetQuaPT>(new Action<KetQuaPT>(this.attach_KetQuaPTs), new Action<KetQuaPT>(this.detach_KetQuaPTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ma_PT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ma_PT
		{
			get
			{
				return this._Ma_PT;
			}
			set
			{
				if ((this._Ma_PT != value))
				{
					this.OnMa_PTChanging(value);
					this.SendPropertyChanging();
					this._Ma_PT = value;
					this.SendPropertyChanged("Ma_PT");
					this.OnMa_PTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten_PT", DbType="NVarChar(250)")]
		public string Ten_PT
		{
			get
			{
				return this._Ten_PT;
			}
			set
			{
				if ((this._Ten_PT != value))
				{
					this.OnTen_PTChanging(value);
					this.SendPropertyChanging();
					this._Ten_PT = value;
					this.SendPropertyChanged("Ten_PT");
					this.OnTen_PTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IM_PT", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string IM_PT
		{
			get
			{
				return this._IM_PT;
			}
			set
			{
				if ((this._IM_PT != value))
				{
					this.OnIM_PTChanging(value);
					this.SendPropertyChanging();
					this._IM_PT = value;
					this.SendPropertyChanged("IM_PT");
					this.OnIM_PTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diem_PT", DbType="Int")]
		public System.Nullable<int> Diem_PT
		{
			get
			{
				return this._Diem_PT;
			}
			set
			{
				if ((this._Diem_PT != value))
				{
					this.OnDiem_PTChanging(value);
					this.SendPropertyChanging();
					this._Diem_PT = value;
					this.SendPropertyChanged("Diem_PT");
					this.OnDiem_PTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai_PT", DbType="Bit")]
		public System.Nullable<bool> TrangThai_PT
		{
			get
			{
				return this._TrangThai_PT;
			}
			set
			{
				if ((this._TrangThai_PT != value))
				{
					this.OnTrangThai_PTChanging(value);
					this.SendPropertyChanging();
					this._TrangThai_PT = value;
					this.SendPropertyChanged("TrangThai_PT");
					this.OnTrangThai_PTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongTrao_KetQuaPT", Storage="_KetQuaPTs", ThisKey="Ma_PT", OtherKey="Ma_PT")]
		public EntitySet<KetQuaPT> KetQuaPTs
		{
			get
			{
				return this._KetQuaPTs;
			}
			set
			{
				this._KetQuaPTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KetQuaPTs(KetQuaPT entity)
		{
			this.SendPropertyChanging();
			entity.PhongTrao = this;
		}
		
		private void detach_KetQuaPTs(KetQuaPT entity)
		{
			this.SendPropertyChanging();
			entity.PhongTrao = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Quyen")]
	public partial class Quyen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaQuyen;
		
		private string _TenQuyen;
		
		private EntitySet<MaLoaiTV_Quyen> _MaLoaiTV_Quyens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaQuyenChanging(string value);
    partial void OnMaQuyenChanged();
    partial void OnTenQuyenChanging(string value);
    partial void OnTenQuyenChanged();
    #endregion
		
		public Quyen()
		{
			this._MaLoaiTV_Quyens = new EntitySet<MaLoaiTV_Quyen>(new Action<MaLoaiTV_Quyen>(this.attach_MaLoaiTV_Quyens), new Action<MaLoaiTV_Quyen>(this.detach_MaLoaiTV_Quyens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaQuyen", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaQuyen
		{
			get
			{
				return this._MaQuyen;
			}
			set
			{
				if ((this._MaQuyen != value))
				{
					this.OnMaQuyenChanging(value);
					this.SendPropertyChanging();
					this._MaQuyen = value;
					this.SendPropertyChanged("MaQuyen");
					this.OnMaQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenQuyen", DbType="NVarChar(50)")]
		public string TenQuyen
		{
			get
			{
				return this._TenQuyen;
			}
			set
			{
				if ((this._TenQuyen != value))
				{
					this.OnTenQuyenChanging(value);
					this.SendPropertyChanging();
					this._TenQuyen = value;
					this.SendPropertyChanged("TenQuyen");
					this.OnTenQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quyen_MaLoaiTV_Quyen", Storage="_MaLoaiTV_Quyens", ThisKey="MaQuyen", OtherKey="MaQuyen")]
		public EntitySet<MaLoaiTV_Quyen> MaLoaiTV_Quyens
		{
			get
			{
				return this._MaLoaiTV_Quyens;
			}
			set
			{
				this._MaLoaiTV_Quyens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MaLoaiTV_Quyens(MaLoaiTV_Quyen entity)
		{
			this.SendPropertyChanging();
			entity.Quyen = this;
		}
		
		private void detach_MaLoaiTV_Quyens(MaLoaiTV_Quyen entity)
		{
			this.SendPropertyChanging();
			entity.Quyen = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SinhVien")]
	public partial class SinhVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Masv;
		
		private string _HoTen;
		
		private string _Matkhau;
		
		private string _Email;
		
		private string _Diachisv;
		
		private string _Dienthoaisv;
		
		private System.Nullable<System.DateTime> _Ngaysinh;
		
		private string _MaLop;
		
		private System.Nullable<bool> _TrangThai;
		
		private EntitySet<BangTieuChi> _BangTieuChis;
		
		private EntitySet<KetQua> _KetQuas;
		
		private EntitySet<KetQuaPT> _KetQuaPTs;
		
		private EntityRef<Lop> _Lop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMasvChanging(string value);
    partial void OnMasvChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnMatkhauChanging(string value);
    partial void OnMatkhauChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDiachisvChanging(string value);
    partial void OnDiachisvChanged();
    partial void OnDienthoaisvChanging(string value);
    partial void OnDienthoaisvChanged();
    partial void OnNgaysinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaysinhChanged();
    partial void OnMaLopChanging(string value);
    partial void OnMaLopChanged();
    partial void OnTrangThaiChanging(System.Nullable<bool> value);
    partial void OnTrangThaiChanged();
    #endregion
		
		public SinhVien()
		{
			this._BangTieuChis = new EntitySet<BangTieuChi>(new Action<BangTieuChi>(this.attach_BangTieuChis), new Action<BangTieuChi>(this.detach_BangTieuChis));
			this._KetQuas = new EntitySet<KetQua>(new Action<KetQua>(this.attach_KetQuas), new Action<KetQua>(this.detach_KetQuas));
			this._KetQuaPTs = new EntitySet<KetQuaPT>(new Action<KetQuaPT>(this.attach_KetQuaPTs), new Action<KetQuaPT>(this.detach_KetQuaPTs));
			this._Lop = default(EntityRef<Lop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Masv", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Masv
		{
			get
			{
				return this._Masv;
			}
			set
			{
				if ((this._Masv != value))
				{
					this.OnMasvChanging(value);
					this.SendPropertyChanging();
					this._Masv = value;
					this.SendPropertyChanged("Masv");
					this.OnMasvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Matkhau", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Matkhau
		{
			get
			{
				return this._Matkhau;
			}
			set
			{
				if ((this._Matkhau != value))
				{
					this.OnMatkhauChanging(value);
					this.SendPropertyChanging();
					this._Matkhau = value;
					this.SendPropertyChanged("Matkhau");
					this.OnMatkhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diachisv", DbType="NVarChar(200)")]
		public string Diachisv
		{
			get
			{
				return this._Diachisv;
			}
			set
			{
				if ((this._Diachisv != value))
				{
					this.OnDiachisvChanging(value);
					this.SendPropertyChanging();
					this._Diachisv = value;
					this.SendPropertyChanged("Diachisv");
					this.OnDiachisvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dienthoaisv", DbType="VarChar(50)")]
		public string Dienthoaisv
		{
			get
			{
				return this._Dienthoaisv;
			}
			set
			{
				if ((this._Dienthoaisv != value))
				{
					this.OnDienthoaisvChanging(value);
					this.SendPropertyChanging();
					this._Dienthoaisv = value;
					this.SendPropertyChanged("Dienthoaisv");
					this.OnDienthoaisvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaysinh", DbType="DateTime")]
		public System.Nullable<System.DateTime> Ngaysinh
		{
			get
			{
				return this._Ngaysinh;
			}
			set
			{
				if ((this._Ngaysinh != value))
				{
					this.OnNgaysinhChanging(value);
					this.SendPropertyChanging();
					this._Ngaysinh = value;
					this.SendPropertyChanged("Ngaysinh");
					this.OnNgaysinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="VarChar(10)")]
		public string MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					if (this._Lop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Bit")]
		public System.Nullable<bool> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_BangTieuChi", Storage="_BangTieuChis", ThisKey="Masv", OtherKey="MaSV")]
		public EntitySet<BangTieuChi> BangTieuChis
		{
			get
			{
				return this._BangTieuChis;
			}
			set
			{
				this._BangTieuChis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_KetQua", Storage="_KetQuas", ThisKey="Masv", OtherKey="Masv")]
		public EntitySet<KetQua> KetQuas
		{
			get
			{
				return this._KetQuas;
			}
			set
			{
				this._KetQuas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_KetQuaPT", Storage="_KetQuaPTs", ThisKey="Masv", OtherKey="Masv")]
		public EntitySet<KetQuaPT> KetQuaPTs
		{
			get
			{
				return this._KetQuaPTs;
			}
			set
			{
				this._KetQuaPTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lop_SinhVien", Storage="_Lop", ThisKey="MaLop", OtherKey="MaLop", IsForeignKey=true)]
		public Lop Lop
		{
			get
			{
				return this._Lop.Entity;
			}
			set
			{
				Lop previousValue = this._Lop.Entity;
				if (((previousValue != value) 
							|| (this._Lop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lop.Entity = null;
						previousValue.SinhViens.Remove(this);
					}
					this._Lop.Entity = value;
					if ((value != null))
					{
						value.SinhViens.Add(this);
						this._MaLop = value.MaLop;
					}
					else
					{
						this._MaLop = default(string);
					}
					this.SendPropertyChanged("Lop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BangTieuChis(BangTieuChi entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = this;
		}
		
		private void detach_BangTieuChis(BangTieuChi entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = null;
		}
		
		private void attach_KetQuas(KetQua entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = this;
		}
		
		private void detach_KetQuas(KetQua entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = null;
		}
		
		private void attach_KetQuaPTs(KetQuaPT entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = this;
		}
		
		private void detach_KetQuaPTs(KetQuaPT entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThanhVien")]
	public partial class ThanhVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_ThanhVien;
		
		private string _TaiKhoan;
		
		private string _MatKhau;
		
		private System.Nullable<int> _ID_MaLoai;
		
		private EntityRef<MaLoaiTV> _MaLoaiTV;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ThanhVienChanging(int value);
    partial void OnID_ThanhVienChanged();
    partial void OnTaiKhoanChanging(string value);
    partial void OnTaiKhoanChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnID_MaLoaiChanging(System.Nullable<int> value);
    partial void OnID_MaLoaiChanged();
    #endregion
		
		public ThanhVien()
		{
			this._MaLoaiTV = default(EntityRef<MaLoaiTV>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ThanhVien", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_ThanhVien
		{
			get
			{
				return this._ID_ThanhVien;
			}
			set
			{
				if ((this._ID_ThanhVien != value))
				{
					this.OnID_ThanhVienChanging(value);
					this.SendPropertyChanging();
					this._ID_ThanhVien = value;
					this.SendPropertyChanged("ID_ThanhVien");
					this.OnID_ThanhVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoan", DbType="NVarChar(50)")]
		public string TaiKhoan
		{
			get
			{
				return this._TaiKhoan;
			}
			set
			{
				if ((this._TaiKhoan != value))
				{
					this.OnTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoan = value;
					this.SendPropertyChanged("TaiKhoan");
					this.OnTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NVarChar(50)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_MaLoai", DbType="Int")]
		public System.Nullable<int> ID_MaLoai
		{
			get
			{
				return this._ID_MaLoai;
			}
			set
			{
				if ((this._ID_MaLoai != value))
				{
					if (this._MaLoaiTV.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_MaLoaiChanging(value);
					this.SendPropertyChanging();
					this._ID_MaLoai = value;
					this.SendPropertyChanged("ID_MaLoai");
					this.OnID_MaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MaLoaiTV_ThanhVien", Storage="_MaLoaiTV", ThisKey="ID_MaLoai", OtherKey="ID_MaLoai", IsForeignKey=true)]
		public MaLoaiTV MaLoaiTV
		{
			get
			{
				return this._MaLoaiTV.Entity;
			}
			set
			{
				MaLoaiTV previousValue = this._MaLoaiTV.Entity;
				if (((previousValue != value) 
							|| (this._MaLoaiTV.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MaLoaiTV.Entity = null;
						previousValue.ThanhViens.Remove(this);
					}
					this._MaLoaiTV.Entity = value;
					if ((value != null))
					{
						value.ThanhViens.Add(this);
						this._ID_MaLoai = value.ID_MaLoai;
					}
					else
					{
						this._ID_MaLoai = default(Nullable<int>);
					}
					this.SendPropertyChanged("MaLoaiTV");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
